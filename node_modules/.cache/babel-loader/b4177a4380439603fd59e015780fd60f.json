{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZZ00F4644\\\\Desktop\\\\React\\\\magic-memory\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport SingleCard from './components/SingleCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImages = [{\n  \"src\": \"/img/helmet-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/potion-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/ring-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/scroll-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/shield-1.png\",\n  matched: false\n}, {\n  \"src\": \"/img/sword-1.png\",\n  matched: false\n}];\n\nfunction App() {\n  _s();\n\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null); //shuffle cards\n\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages].sort(() => Math.random() - 0.5).map(card => ({ ...card,\n      id: Math.random()\n    }));\n    setCards(shuffledCards);\n    setTurns(0);\n  }; //handle choice\n\n\n  const handleChoice = card => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  }; //compare the 2 selected cards\n\n\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src) {\n              return { ...card,\n                matched: true\n              };\n            } else {\n              return card;\n            }\n          });\n        });\n      } else {\n        resetTurn();\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n  console.log(cards); // reset choices & increase turn\n\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurns => prevTurns + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Magic Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(SingleCard, {\n        card: card,\n        handleChoice: handleChoice,\n        flipped: card === choiceOne || card === choiceTwo || card.matched\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/JnteANCPxCZNpFpO1ZAWIjzFcc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/ZZ00F4644/Desktop/React/magic-memory/src/App.js"],"names":["useEffect","useState","SingleCard","cardImages","matched","App","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","shuffleCards","shuffledCards","sort","Math","random","map","card","id","handleChoice","src","prevCards","resetTurn","console","log","prevTurns"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport './App.css'\nimport SingleCard from './components/SingleCard'\n\nconst cardImages = [\n  { \"src\": \"/img/helmet-1.png\", matched:false },\n  { \"src\": \"/img/potion-1.png\", matched:false },\n  { \"src\": \"/img/ring-1.png\", matched:false },\n  { \"src\": \"/img/scroll-1.png\", matched:false },\n  { \"src\": \"/img/shield-1.png\", matched:false },\n  { \"src\": \"/img/sword-1.png\", matched:false },\n]\n\nfunction App() {\n\n  const [cards, setCards] = useState([])\n  const [turns, setTurns] = useState(0)\n  const [choiceOne, setChoiceOne] = useState(null)\n  const [choiceTwo, setChoiceTwo] = useState(null)\n\n  //shuffle cards\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map((card) => ({ ...card, id: Math.random() }))\n\n      setCards(shuffledCards)\n      setTurns(0)\n  }\n\n  //handle choice\n  const handleChoice = (card) => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\n  }\n\n  //compare the 2 selected cards\n  useEffect(() => {\n    if(choiceOne && choiceTwo) {\n\n      if(choiceOne.src === choiceTwo.src){\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src) {\n              return {...card, matched: true}\n            }\n            else {\n              return card\n            }\n          })\n        })\n      }\n      else {\n        resetTurn()\n      }\n    }\n  },[choiceOne,choiceTwo])\n\n  console.log(cards)\n\n  \n  // reset choices & increase turn\n  const resetTurn = () => {\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setTurns(prevTurns => prevTurns + 1)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards}>New Game</button>\n\n      <div className=\"card-grid\">\n        {cards.map(card => (\n          <SingleCard \n          key={card.id} \n          card={card} \n          handleChoice={handleChoice} \n          flipped={card === choiceOne || card === choiceTwo || card.matched}/>))}\n      </div>\n    </div>\n  );\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}